{"ast":null,"code":"var _jsxFileName = \"/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateProduct.js\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from 'react'\n\n// import Base from '../core/Base';\n// import { Link,Navigate } from 'react-router-dom';\n// import { isAuthenticated } from '../auth/helper/index';\n// import {updateProduct,getProduct, getAllCategories} from '../admin/helper/adminapicall';\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct=()=> {\n\n//     const {user,token} = isAuthenticated();\n\n//     const [values,setValues] = useState({\n//         name:\"\",\n//         description:\"\",\n//         price:\"\",\n//         stock:\"\",\n//         photo:\"\",\n//         categories:[],\n//         category:\"\",\n//         loading:false,\n//         error:\"\",\n//         updatedProduct:\"\",\n//         getaRedirect:false,\n//         formData:\"\"\n\n//     })\n\n//     const {name,description,price,stock,categories,category,loading,error,updatedProduct,getaRedirect,formData} = values;\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//     const preLoad = productId =>{\n//         getProduct(productId).then(data =>{\n\n//             console.log(data);\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 preLoadCategories();\n//                 setValues({\n//                     ...values,\n//                     name:data.name,\n//                     description:data.description,\n//                     price:data.price,\n//                     category:data.category._id,\n//                     stock:data.stock,\n\n//                     formData:new FormData()\n//                 });\n\n//             }\n//         })\n//     }\n\n// const preLoadCategories = ()=>{\n//     getAllCategories().then(data=>{\n//         if(data.error){\n//             setValues({...values,error:data.error})\n//         }\n//         else{\n//             setValues({\n//                 categories:data,formData:new FormData()\n//             })\n//         }\n//     })\n// }\n\n// const match = useMatch(\n//     \"/admin/product/update/:productId\"\n//   );\n\n//     useEffect(() => {\n//         preLoad(match.params.productId)\n//     }, );\n\n//     const handleChange =name=> event =>{\n//         const value = name ===\"photo\" ? event.target.files[0] : event.target.value;\n//         formData.set(name,value);\n//         setValues({...values,[name]:value})\n\n//     }\n//     const onSubmit = event =>{\n//         event.preventDefault();\n//         setValues({...values,error:\"\",loading:true})\n//         updateProduct(match.params.productId,user._id,token,formData)\n//         .then(data =>{\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 setValues({...values,name:\"\",price:\"\",stock:\"\",description:\"\",photo:\"\",loading:false,updatedProduct:data.name})\n//             }\n//         })\n\n// }\n\n//     const successMessage =() =>(\n//         <div className=\" alert alert-success mt-3\" style={{display : updatedProduct ? \"\" : \"none\"}}>\n//             <h4>{updatedProduct} updated Successfully</h4>\n//         </div>\n//     )\n\n//     const errorMessage =() =>(\n//         <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//             <h4>Not able to update {updatedProduct}</h4>\n//         </div>\n//     )\n\n//     const loadingMessage =()=>{\n//         return(\n//         loading && (\n//         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//         Loading......\n//         </div>)\n//     )}\n\n//     const performRedirect =()=>{\n//         if(getaRedirect){\n//             if(user && user.role===1){\n//             return <Navigate to=\"/admin/dashboard\" />\n//             }else{\n//             return <Navigate to=\"/user/dashboard\" />\n//             }\n//         }\n\n//     }\n\n//     const updateProductForm = () => (\n//         <form class=\"row g-3 p-2\" >\n\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Name of Product</label>\n//             <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Description of Product</label>\n//             <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Price</label>\n//             <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>Select Category</label>\n//             <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//             >\n//             <option>Select</option>\n//                 {categories && categories.map((category,index)=>{\n//                 return(\n//                     <option key={index} value={category._id}>{category.name}</option>\n//                 )\n//             })}\n\n//             </select>\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>stock</label>\n//             <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Quantity\"\n//             value={stock}\n//             />\n//         </div>\n\n//         <div className=\"form-group col-md-12\">\n//         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n//             <input\n//                 onChange={handleChange(\"photo\")}\n//                 className=\"form-control\"\n//                 id=\"formFile\"\n//                 type=\"file\"\n//                 name=\"photo\"\n//                 accept=\"image\"\n//                 placeholder=\"choose a file\"\n//             />\n\n//         </div>\n\n//         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n//             Update Product\n//         </button>\n//         </form>\n//     );\n\n// return (\n//     <Base title='Add a Product Here! ' description='Welcome to Product Creation Section' className='container'>\n//         <Link to=\"/admin/dashboard\" className='btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2'>Admin Home</Link>\n//         <h2  className=\"text-center mb-2 py-4 text-white \">Update a Product</h2>\n//     <div className=\"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\">\n//         <div className='col-md-8 p-1 mt-2 offset-md-2'>\n//             {loadingMessage()}\n//             {performRedirect()}\n//             {successMessage()}\n//             {errorMessage()}\n//             {updateProductForm()}\n//         </div>\n//     </div>\n//     </Base>\n// )\n// }\n\n// export default UpdateProduct;\n\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport { getAllCategories, getProduct, updateProduct } from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = _ref => {\n  _s();\n  let {\n    match\n  } = _ref;\n  const {\n    user,\n    token\n  } = isAutheticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n  const preload = productId => {\n    getProduct(productId).then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        preloadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n  const preloadCategories = () => {\n    getAllCategories().then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  //TODO: work on it\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({\n      ...values,\n      error: \"\",\n      loading: true\n    });\n    updateProduct(match.params.productId, user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          description: \"\",\n          price: \"\",\n          photo: \"\",\n          stock: \"\",\n          loading: false,\n          createdProduct: data.name\n        });\n      }\n    });\n  };\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const successMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-success mt-3\",\n    style: {\n      display: createdProduct ? \"\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [createdProduct, \" updated successfully\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n  const createProductForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Post photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-block btn-success\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange(\"photo\"),\n          type: \"file\",\n          name: \"photo\",\n          accept: \"image\",\n          placeholder: \"choose a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange(\"name\"),\n        name: \"photo\",\n        className: \"form-control\",\n        placeholder: \"Name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChange(\"description\"),\n        name: \"photo\",\n        className: \"form-control\",\n        placeholder: \"Description\",\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange(\"price\"),\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Price\",\n        value: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleChange(\"category\"),\n        className: \"form-control\",\n        placeholder: \"Category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), categories && categories.map((cate, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cate._id,\n          children: cate.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange(\"stock\"),\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Stock\",\n        value: stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: onSubmit,\n      className: \"btn btn-outline-success mb-3\",\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Add a product here!\",\n    description: \"Welcome to product creation section\",\n    className: \"container bg-info p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/dashboard\",\n      className: \"btn btn-md btn-dark mb-3\",\n      children: \"Admin Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row bg-dark text-white rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        children: [successMessage(), createProductForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"7nSm6Jg4ghi7O4eSK2Q3Tv5ga84=\");\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","Base","Link","getAllCategories","getProduct","updateProduct","isAutheticated","jsxDEV","_jsxDEV","UpdateProduct","_ref","_s","match","user","token","values","setValues","name","description","price","stock","photo","categories","category","loading","error","createdProduct","getaRedirect","formData","preload","productId","then","data","preloadCategories","_id","FormData","params","onSubmit","event","preventDefault","handleChange","value","target","files","set","successMessage","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","createProductForm","onChange","type","accept","placeholder","map","cate","index","onClick","title","to","_c","$RefreshReg$"],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateProduct.js"],"sourcesContent":["// import React,{useState,useEffect} from 'react'\n\n\n// import Base from '../core/Base';\n// import { Link,Navigate } from 'react-router-dom';\n// import { isAuthenticated } from '../auth/helper/index';\n// import {updateProduct,getProduct, getAllCategories} from '../admin/helper/adminapicall';\n// import { useMatch } from 'react-router-dom';\n\n\n\n\n\n\n// const UpdateProduct=()=> {\n    \n    \n//     const {user,token} = isAuthenticated();\n\n//     const [values,setValues] = useState({\n//         name:\"\",\n//         description:\"\",\n//         price:\"\",\n//         stock:\"\",\n//         photo:\"\",\n//         categories:[],\n//         category:\"\",\n//         loading:false,\n//         error:\"\",\n//         updatedProduct:\"\",\n//         getaRedirect:false,\n//         formData:\"\"\n\n//     })\n\n//     const {name,description,price,stock,categories,category,loading,error,updatedProduct,getaRedirect,formData} = values;\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//     const preLoad = productId =>{\n//         getProduct(productId).then(data =>{\n            \n//             console.log(data);\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 preLoadCategories();\n//                 setValues({\n//                     ...values,\n//                     name:data.name,\n//                     description:data.description,\n//                     price:data.price,\n//                     category:data.category._id,\n//                     stock:data.stock,\n                    \n//                     formData:new FormData()\n//                 });\n                \n//             }\n//         })\n//     }\n\n\n// const preLoadCategories = ()=>{\n//     getAllCategories().then(data=>{\n//         if(data.error){\n//             setValues({...values,error:data.error})\n//         }\n//         else{\n//             setValues({\n//                 categories:data,formData:new FormData()\n//             })\n//         }\n//     })\n// }\n\n// const match = useMatch(\n//     \"/admin/product/update/:productId\"\n//   );\n\n\n//     useEffect(() => {\n//         preLoad(match.params.productId)\n//     }, );\n\n//     const handleChange =name=> event =>{\n//         const value = name ===\"photo\" ? event.target.files[0] : event.target.value;\n//         formData.set(name,value);\n//         setValues({...values,[name]:value})\n\n//     }\n//     const onSubmit = event =>{\n//         event.preventDefault();\n//         setValues({...values,error:\"\",loading:true})\n//         updateProduct(match.params.productId,user._id,token,formData)\n//         .then(data =>{\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 setValues({...values,name:\"\",price:\"\",stock:\"\",description:\"\",photo:\"\",loading:false,updatedProduct:data.name})\n//             }\n//         })\n\n// }\n\n//     const successMessage =() =>(\n//         <div className=\" alert alert-success mt-3\" style={{display : updatedProduct ? \"\" : \"none\"}}>\n//             <h4>{updatedProduct} updated Successfully</h4>\n//         </div>\n//     )\n\n//     const errorMessage =() =>(\n//         <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//             <h4>Not able to update {updatedProduct}</h4>\n//         </div>\n//     )\n\n//     const loadingMessage =()=>{\n//         return(\n//         loading && (\n//         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//         Loading......\n//         </div>)\n//     )}\n\n//     const performRedirect =()=>{\n//         if(getaRedirect){\n//             if(user && user.role===1){\n//             return <Navigate to=\"/admin/dashboard\" />\n//             }else{\n//             return <Navigate to=\"/user/dashboard\" />\n//             }\n//         }\n        \n//     }\n\n//     const updateProductForm = () => (\n//         <form class=\"row g-3 p-2\" >\n        \n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Name of Product</label>\n//             <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Description of Product</label>\n//             <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Price</label>\n//             <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>Select Category</label>\n//             <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//             >\n//             <option>Select</option>\n//                 {categories && categories.map((category,index)=>{\n//                 return(\n//                     <option key={index} value={category._id}>{category.name}</option>\n//                 )\n//             })}\n            \n//             </select>\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>stock</label>\n//             <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Quantity\"\n//             value={stock}\n//             />\n//         </div>\n        \n//         <div className=\"form-group col-md-12\">\n//         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n//             <input\n//                 onChange={handleChange(\"photo\")}\n//                 className=\"form-control\"\n//                 id=\"formFile\"\n//                 type=\"file\"\n//                 name=\"photo\"\n//                 accept=\"image\"\n//                 placeholder=\"choose a file\"\n//             />\n            \n//         </div>\n        \n//         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n//             Update Product\n//         </button>\n//         </form>\n//     );\n\n// return (\n//     <Base title='Add a Product Here! ' description='Welcome to Product Creation Section' className='container'>\n//         <Link to=\"/admin/dashboard\" className='btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2'>Admin Home</Link>\n//         <h2  className=\"text-center mb-2 py-4 text-white \">Update a Product</h2>\n//     <div className=\"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\">\n//         <div className='col-md-8 p-1 mt-2 offset-md-2'>\n//             {loadingMessage()}\n//             {performRedirect()}\n//             {successMessage()}\n//             {errorMessage()}\n//             {updateProductForm()}\n//         </div>\n//     </div>\n//     </Base>\n// )\n// }\n\n\n// export default UpdateProduct;\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport Base from \"../core/Base\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAllCategories,\n  getProduct,\n  updateProduct\n} from \"./helper/adminapicall\";\nimport { isAutheticated } from \"../auth/helper/index\";\n\nconst UpdateProduct = ({ match}) => {\n  const { user, token } = isAutheticated();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    createdProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    createdProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  const preload = productId => {\n    getProduct(productId).then(data => {\n      //console.log(data);\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        preloadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  const preloadCategories = () => {\n    getAllCategories().then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    preload(match.params.productId);\n  }, []);\n\n  //TODO: work on it\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values, error: \"\", loading: true });\n\n    updateProduct(match.params.productId, user._id, token, formData).then(\n      data => {\n        if (data.error) {\n          setValues({ ...values, error: data.error });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            photo: \"\",\n            stock: \"\",\n            loading: false,\n            createdProduct: data.name\n          });\n        }\n      }\n    );\n  };\n\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({ ...values, [name]: value });\n  };\n\n  const successMessage = () => (\n    <div\n      className=\"alert alert-success mt-3\"\n      style={{ display: createdProduct ? \"\" : \"none\" }}\n    >\n      <h4>{createdProduct} updated successfully</h4>\n    </div>\n  );\n\n  const createProductForm = () => (\n    <form>\n      <span>Post photo</span>\n      <div className=\"form-group\">\n        <label className=\"btn btn-block btn-success\">\n          <input\n            onChange={handleChange(\"photo\")}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image\"\n            placeholder=\"choose a file\"\n          />\n        </label>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"name\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Name\"\n          value={name}\n        />\n      </div>\n      <div className=\"form-group\">\n        <textarea\n          onChange={handleChange(\"description\")}\n          name=\"photo\"\n          className=\"form-control\"\n          placeholder=\"Description\"\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"price\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Price\"\n          value={price}\n        />\n      </div>\n      <div className=\"form-group\">\n        <select\n          onChange={handleChange(\"category\")}\n          className=\"form-control\"\n          placeholder=\"Category\"\n        >\n          <option>Select</option>\n          {categories &&\n            categories.map((cate, index) => (\n              <option key={index} value={cate._id}>\n                {cate.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"form-group\">\n        <input\n          onChange={handleChange(\"stock\")}\n          type=\"number\"\n          className=\"form-control\"\n          placeholder=\"Stock\"\n          value={stock}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        onClick={onSubmit}\n        className=\"btn btn-outline-success mb-3\"\n      >\n        Update Product\n      </button>\n    </form>\n  );\n\n  return (\n    <Base\n      title=\"Add a product here!\"\n      description=\"Welcome to product creation section\"\n      className=\"container bg-info p-4\"\n    >\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n        Admin Home\n      </Link>\n      <div className=\"row bg-dark text-white rounded\">\n        <div className=\"col-md-8 offset-md-2\">\n          {successMessage()}\n          {createProductForm()}\n        </div>\n      </div>\n    </Base>\n  );\n};\n\nexport default UpdateProduct;\n"],"mappings":";;AAAA;;AAGA;AACA;AACA;AACA;AACA;;AAOA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SACEC,gBAAgB,EAChBC,UAAU,EACVC,aAAa,QACR,uBAAuB;AAC9B,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,aAAa,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC7B,MAAM;IAAEG,IAAI;IAAEC;EAAM,CAAC,GAAGR,cAAc,EAAE;EAExC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC;IACnCkB,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IACJX,IAAI;IACJC,WAAW;IACXC,KAAK;IACLC,KAAK;IACLE,UAAU;IACVC,QAAQ;IACRC,OAAO;IACPC,KAAK;IACLC,cAAc;IACdC,YAAY;IACZC;EACF,CAAC,GAAGb,MAAM;EAEV,MAAMc,OAAO,GAAGC,SAAS,IAAI;IAC3B1B,UAAU,CAAC0B,SAAS,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;MACjC;MACA,IAAIA,IAAI,CAACP,KAAK,EAAE;QACdT,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEU,KAAK,EAAEO,IAAI,CAACP;QAAM,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLQ,iBAAiB,EAAE;QACnBjB,SAAS,CAAC;UACR,GAAGD,MAAM;UACTE,IAAI,EAAEe,IAAI,CAACf,IAAI;UACfC,WAAW,EAAEc,IAAI,CAACd,WAAW;UAC7BC,KAAK,EAAEa,IAAI,CAACb,KAAK;UACjBI,QAAQ,EAAES,IAAI,CAACT,QAAQ,CAACW,GAAG;UAC3Bd,KAAK,EAAEY,IAAI,CAACZ,KAAK;UACjBQ,QAAQ,EAAE,IAAIO,QAAQ;QACxB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMF,iBAAiB,GAAGA,CAAA,KAAM;IAC9B9B,gBAAgB,EAAE,CAAC4B,IAAI,CAACC,IAAI,IAAI;MAC9B,IAAIA,IAAI,CAACP,KAAK,EAAE;QACdT,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEU,KAAK,EAAEO,IAAI,CAACP;QAAM,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLT,SAAS,CAAC;UACRM,UAAU,EAAEU,IAAI;UAChBJ,QAAQ,EAAE,IAAIO,QAAQ;QACxB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACd6B,OAAO,CAACjB,KAAK,CAACwB,MAAM,CAACN,SAAS,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,QAAQ,GAAGC,KAAK,IAAI;IACxBA,KAAK,CAACC,cAAc,EAAE;IACtBvB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEU,KAAK,EAAE,EAAE;MAAED,OAAO,EAAE;IAAK,CAAC,CAAC;IAElDnB,aAAa,CAACO,KAAK,CAACwB,MAAM,CAACN,SAAS,EAAEjB,IAAI,CAACqB,GAAG,EAAEpB,KAAK,EAAEc,QAAQ,CAAC,CAACG,IAAI,CACnEC,IAAI,IAAI;MACN,IAAIA,IAAI,CAACP,KAAK,EAAE;QACdT,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEU,KAAK,EAAEO,IAAI,CAACP;QAAM,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLT,SAAS,CAAC;UACR,GAAGD,MAAM;UACTE,IAAI,EAAE,EAAE;UACRC,WAAW,EAAE,EAAE;UACfC,KAAK,EAAE,EAAE;UACTE,KAAK,EAAE,EAAE;UACTD,KAAK,EAAE,EAAE;UACTI,OAAO,EAAE,KAAK;UACdE,cAAc,EAAEM,IAAI,CAACf;QACvB,CAAC,CAAC;MACJ;IACF,CAAC,CACF;EACH,CAAC;EAED,MAAMuB,YAAY,GAAGvB,IAAI,IAAIqB,KAAK,IAAI;IACpC,MAAMG,KAAK,GAAGxB,IAAI,KAAK,OAAO,GAAGqB,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGL,KAAK,CAACI,MAAM,CAACD,KAAK;IAC3Eb,QAAQ,CAACgB,GAAG,CAAC3B,IAAI,EAAEwB,KAAK,CAAC;IACzBzB,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACE,IAAI,GAAGwB;IAAM,CAAC,CAAC;EACzC,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,kBACrBrC,OAAA;IACEsC,SAAS,EAAC,0BAA0B;IACpCC,KAAK,EAAE;MAAEC,OAAO,EAAEtB,cAAc,GAAG,EAAE,GAAG;IAAO,CAAE;IAAAuB,QAAA,eAEjDzC,OAAA;MAAAyC,QAAA,GAAKvB,cAAc,EAAC,uBAAqB;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEjD;EAED,MAAMC,iBAAiB,GAAGA,CAAA,kBACxB9C,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACvB7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QAAOsC,SAAS,EAAC,2BAA2B;QAAAG,QAAA,eAC1CzC,OAAA;UACE+C,QAAQ,EAAEf,YAAY,CAAC,OAAO,CAAE;UAChCgB,IAAI,EAAC,MAAM;UACXvC,IAAI,EAAC,OAAO;UACZwC,MAAM,EAAC,OAAO;UACdC,WAAW,EAAC;QAAe;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC3B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eACN7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QACE+C,QAAQ,EAAEf,YAAY,CAAC,MAAM,CAAE;QAC/BvB,IAAI,EAAC,OAAO;QACZ6B,SAAS,EAAC,cAAc;QACxBY,WAAW,EAAC,MAAM;QAClBjB,KAAK,EAAExB;MAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QACE+C,QAAQ,EAAEf,YAAY,CAAC,aAAa,CAAE;QACtCvB,IAAI,EAAC,OAAO;QACZ6B,SAAS,EAAC,cAAc;QACxBY,WAAW,EAAC,aAAa;QACzBjB,KAAK,EAAEvB;MAAY;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QACE+C,QAAQ,EAAEf,YAAY,CAAC,OAAO,CAAE;QAChCgB,IAAI,EAAC,QAAQ;QACbV,SAAS,EAAC,cAAc;QACxBY,WAAW,EAAC,OAAO;QACnBjB,KAAK,EAAEtB;MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QACE+C,QAAQ,EAAEf,YAAY,CAAC,UAAU,CAAE;QACnCM,SAAS,EAAC,cAAc;QACxBY,WAAW,EAAC,UAAU;QAAAT,QAAA,gBAEtBzC,OAAA;UAAAyC,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EACtB/B,UAAU,IACTA,UAAU,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBrD,OAAA;UAAoBiC,KAAK,EAAEmB,IAAI,CAAC1B,GAAI;UAAAe,QAAA,EACjCW,IAAI,CAAC3C;QAAI,GADC4C,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACN7C,OAAA;MAAKsC,SAAS,EAAC,YAAY;MAAAG,QAAA,eACzBzC,OAAA;QACE+C,QAAQ,EAAEf,YAAY,CAAC,OAAO,CAAE;QAChCgB,IAAI,EAAC,QAAQ;QACbV,SAAS,EAAC,cAAc;QACxBY,WAAW,EAAC,OAAO;QACnBjB,KAAK,EAAErB;MAAM;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAEN7C,OAAA;MACEgD,IAAI,EAAC,QAAQ;MACbM,OAAO,EAAEzB,QAAS;MAClBS,SAAS,EAAC,8BAA8B;MAAAG,QAAA,EACzC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEZ;EAED,oBACE7C,OAAA,CAACP,IAAI;IACH8D,KAAK,EAAC,qBAAqB;IAC3B7C,WAAW,EAAC,qCAAqC;IACjD4B,SAAS,EAAC,uBAAuB;IAAAG,QAAA,gBAEjCzC,OAAA,CAACN,IAAI;MAAC8D,EAAE,EAAC,kBAAkB;MAAClB,SAAS,EAAC,0BAA0B;MAAAG,QAAA,EAAC;IAEjE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACP7C,OAAA;MAAKsC,SAAS,EAAC,gCAAgC;MAAAG,QAAA,eAC7CzC,OAAA;QAAKsC,SAAS,EAAC,sBAAsB;QAAAG,QAAA,GAClCJ,cAAc,EAAE,EAChBS,iBAAiB,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC1C,EAAA,CA1MIF,aAAa;AAAAwD,EAAA,GAAbxD,aAAa;AA4MnB,eAAeA,aAAa;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}