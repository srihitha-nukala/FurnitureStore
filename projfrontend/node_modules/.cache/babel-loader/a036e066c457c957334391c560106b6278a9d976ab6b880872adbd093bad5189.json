{"ast":null,"code":"var _jsxFileName = \"/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Base from '../core/Base';\nimport { Link, Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../auth/helper/index';\nimport { updateProduct, getProduct, getAllCategories } from '../admin/helper/adminapicall';\nimport { useMatch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    user,\n    token\n  } = isAuthenticated();\n  const [values, setValues] = useState({\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    stock: \"\",\n    photo: \"\",\n    categories: [],\n    category: \"\",\n    loading: false,\n    error: \"\",\n    updatedProduct: \"\",\n    getaRedirect: false,\n    formData: \"\"\n  });\n  const {\n    name,\n    description,\n    price,\n    stock,\n    categories,\n    category,\n    loading,\n    error,\n    updatedProduct,\n    getaRedirect,\n    formData\n  } = values;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const preLoad = productId => {\n    getProduct(productId).then(data => {\n      console.log(data);\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        preLoadCategories();\n        setValues({\n          ...values,\n          name: data.name,\n          description: data.description,\n          price: data.price,\n          category: data.category._id,\n          stock: data.stock,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n  const preLoadCategories = () => {\n    getAllCategories().then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          categories: data,\n          formData: new FormData()\n        });\n      }\n    });\n  };\n  const match = useMatch(\"/admin/product/update/:productId\");\n  useEffect(() => {\n    preLoad(match.params.productId);\n  });\n  const handleChange = name => event => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    formData.set(name, value);\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({\n      ...values,\n      error: \"\",\n      loading: true\n    });\n    updateProduct(match.params.productId, user._id, token, formData).then(data => {\n      if (data.error) {\n        setValues({\n          ...values,\n          error: data.error\n        });\n      } else {\n        setValues({\n          ...values,\n          name: \"\",\n          price: \"\",\n          stock: \"\",\n          description: \"\",\n          photo: \"\",\n          loading: false,\n          updatedProduct: data.name\n        });\n      }\n    });\n  };\n  const successMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" alert alert-success mt-3\",\n    style: {\n      display: updatedProduct ? \"\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [updatedProduct, \" updated Successfully\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n  const errorMessage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" alert alert-danger mt-3\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Not able to update \", updatedProduct]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n\n  //     const loadingMessage =()=>{\n  //         return(\n  //         loading && (\n  //         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n  //         Loading......\n  //         </div>)\n  //     )}\n\n  //     const performRedirect =()=>{\n  //         if(getaRedirect){\n  //             if(user && user.role===1){\n  //             return <Navigate to=\"/admin/dashboard\" />\n  //             }else{\n  //             return <Navigate to=\"/user/dashboard\" />\n  //             }\n  //         }\n\n  //     }\n\n  //     const updateProductForm = () => (\n  //         <form class=\"row g-3 p-2\" >\n\n  //         <div className=\"form-group col-md-12\">\n  //         <label type=\"text\" className='text-dark'>Name of Product</label>\n  //             <input\n  //             onChange={handleChange(\"name\")}\n  //             name=\"photo\"\n  //             className=\"form-control\"\n  //             placeholder=\"Name\"\n  //             value={name}\n  //             />\n  //         </div>\n  //         <div className=\"form-group col-md-12\">\n  //         <label type=\"text\" className='text-dark'>Description of Product</label>\n  //             <textarea\n  //             onChange={handleChange(\"description\")}\n  //             name=\"photo\"\n  //             className=\"form-control\"\n  //             placeholder=\"Description\"\n  //             value={description}\n  //             />\n  //         </div>\n  //         <div className=\"form-group col-md-12\">\n  //         <label type=\"text\" className='text-dark'>Price</label>\n  //             <input\n  //             onChange={handleChange(\"price\")}\n  //             type=\"number\"\n  //             className=\"form-control\"\n  //             placeholder=\"Price\"\n  //             value={price}\n  //             />\n  //         </div>\n  //         <div className=\"form-group col-md-6\">\n  //         <label type=\"text\" className='text-dark'>Select Category</label>\n  //             <select\n  //             onChange={handleChange(\"category\")}\n  //             className=\"form-control\"\n  //             placeholder=\"Category\"\n  //             >\n  //             <option>Select</option>\n  //                 {categories && categories.map((category,index)=>{\n  //                 return(\n  //                     <option key={index} value={category._id}>{category.name}</option>\n  //                 )\n  //             })}\n\n  //             </select>\n  //         </div>\n  //         <div className=\"form-group col-md-6\">\n  //         <label type=\"text\" className='text-dark'>stock</label>\n  //             <input\n  //             onChange={handleChange(\"stock\")}\n  //             type=\"number\"\n  //             className=\"form-control\"\n  //             placeholder=\"Quantity\"\n  //             value={stock}\n  //             />\n  //         </div>\n\n  //         <div className=\"form-group col-md-12\">\n  //         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n  //             <input\n  //                 onChange={handleChange(\"photo\")}\n  //                 className=\"form-control\"\n  //                 id=\"formFile\"\n  //                 type=\"file\"\n  //                 name=\"photo\"\n  //                 accept=\"image\"\n  //                 placeholder=\"choose a file\"\n  //             />\n\n  //         </div>\n\n  //         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n  //             Update Product\n  //         </button>\n  //         </form>\n  //     );\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"Add a Product Here! \",\n    description: \"Welcome to Product Creation Section\",\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/dashboard\",\n      className: \"btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2\",\n      children: \"Admin Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-2 py-4 text-white \",\n      children: \"Update a Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8 p-1 mt-2 offset-md-2\",\n        children: [loadingMessage(), performRedirect(), successMessage(), errorMessage(), updateProductForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"Z81QE2/tooTNciYwqm7Hn52CqYw=\", false, function () {\n  return [useMatch];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\n\n// import React, { useState, useEffect } from \"react\";\n// import Base from \"../core/Base\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   getAllCategories,\n//   getProduct,\n//   updateProduct\n// } from \"./helper/adminapicall\";\n// import { isAuthenticated } from \"../auth/helper/index\";\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct = () => {\n//   const { user, token } = isAuthenticated();\n\n//   const [values, setValues] = useState({\n//     name: \"\",\n//     description: \"\",\n//     price: \"\",\n//     stock: \"\",\n//     photo: \"\",\n//     categories: [],\n//     category: \"\",\n//     loading: false,\n//     error: \"\",\n//     createdProduct: \"\",\n//     getaRedirect: false,\n//     formData: \"\"\n//   });\n\n//   const {\n//     name,\n//     description,\n//     price,\n//     stock,\n//     categories,\n//     category,\n//     loading,\n//     error,\n//     createdProduct,\n//     getaRedirect,\n//     formData\n//   } = values;\n\n//   const preload = productId => {\n//     getProduct(productId).then(data => {\n//       //console.log(data);\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         preloadCategories();\n//         setValues({\n//           ...values,\n//           name: data.name,\n//           description: data.description,\n//           price: data.price,\n//           category: data.category._id,\n//           stock: data.stock,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n\n//   const preloadCategories = () => {\n//     getAllCategories().then(data => {\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         setValues({\n//           categories: data,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n//   const match = useMatch(\n//          \"/admin/product/update/:productId\"\n//        );\n\n//   useEffect(() => {\n//     preload(match.params.productId);\n//   }, []);\n\n//   //TODO: work on it\n//   const onSubmit = event => {\n//     event.preventDefault();\n//     setValues({ ...values, error: \"\", loading: true });\n\n//     updateProduct(match.params.productId, user._id, token, formData).then(\n//       data => {\n//         if (data.error) {\n//           setValues({ ...values, error: data.error });\n//         } else {\n//           setValues({\n//             ...values,\n//             name: \"\",\n//             description: \"\",\n//             price: \"\",\n//             photo: \"\",\n//             stock: \"\",\n//             loading: false,\n//             createdProduct: data.name\n//           });\n//         }\n//       }\n//     );\n//   };\n\n//   const handleChange = name => event => {\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//     formData.set(name, value);\n//     setValues({ ...values, [name]: value });\n//   };\n\n//   const successMessage = () => (\n//     <div\n//       className=\"alert alert-success mt-3\"\n//       style={{ display: createdProduct ? \"\" : \"none\" }}\n//     >\n//       <h4>{createdProduct} updated successfully</h4>\n//     </div>\n//   );\n//   const errorMessage =() =>(\n//             <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//                 <h4>Not able to update {createdProduct}</h4>\n//            </div>\n//   )\n//   const createProductForm = () => (\n//     <form>\n//       <span>Post photo</span>\n//       <div className=\"form-group\">\n//         <label className=\"btn btn-block btn-success\">\n//           <input\n//             onChange={handleChange(\"photo\")}\n//             type=\"file\"\n//             name=\"photo\"\n//             accept=\"image\"\n//             placeholder=\"choose a file\"\n//           />\n//         </label>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"name\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Name\"\n//           value={name}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <textarea\n//           onChange={handleChange(\"description\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Description\"\n//           value={description}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"price\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Price\"\n//           value={price}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <select\n//           onChange={handleChange(\"category\")}\n//           className=\"form-control\"\n//           placeholder=\"Category\"\n//         >\n//           <option>Select</option>\n//           {categories &&\n//             categories.map((cate, index) => (\n//               <option key={index} value={cate._id}>\n//                 {cate.name}\n//               </option>\n//             ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"stock\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Stock\"\n//           value={stock}\n//         />\n//       </div>\n\n//       <button\n//         type=\"submit\"\n//         onClick={onSubmit}\n//         className=\"btn btn-outline-success mb-3\"\n//       >\n//         Update Product\n//       </button>\n//     </form>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Add a product here!\"\n//       description=\"Welcome to product creation section\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n//         Admin Home\n//       </Link>\n//       <div className=\"row bg-dark text-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//             {errorMessage()}\n//           {successMessage()}\n//           {createProductForm()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","useEffect","Base","Link","Navigate","isAuthenticated","updateProduct","getProduct","getAllCategories","useMatch","jsxDEV","_jsxDEV","UpdateProduct","_s","user","token","values","setValues","name","description","price","stock","photo","categories","category","loading","error","updatedProduct","getaRedirect","formData","preLoad","productId","then","data","console","log","preLoadCategories","_id","FormData","match","params","handleChange","event","value","target","files","set","onSubmit","preventDefault","successMessage","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","title","to","loadingMessage","performRedirect","updateProductForm","_c","$RefreshReg$"],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateProduct.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\n\n\nimport Base from '../core/Base';\nimport { Link,Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../auth/helper/index';\nimport {updateProduct,getProduct, getAllCategories} from '../admin/helper/adminapicall';\nimport { useMatch } from 'react-router-dom';\n\n\n\n\n\n\nconst UpdateProduct=()=> {\n    \n    \n    const {user,token} = isAuthenticated();\n\n    const [values,setValues] = useState({\n        name:\"\",\n        description:\"\",\n        price:\"\",\n        stock:\"\",\n        photo:\"\",\n        categories:[],\n        category:\"\",\n        loading:false,\n        error:\"\",\n        updatedProduct:\"\",\n        getaRedirect:false,\n        formData:\"\"\n\n    })\n\n    const {name,description,price,stock,categories,category,loading,error,updatedProduct,getaRedirect,formData} = values;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const preLoad = productId =>{\n        getProduct(productId).then(data =>{\n            \n            console.log(data);\n            if(data.error){\n                setValues({...values,error:data.error})\n            }else{\n                preLoadCategories();\n                setValues({\n                    ...values,\n                    name:data.name,\n                    description:data.description,\n                    price:data.price,\n                    category:data.category._id,\n                    stock:data.stock,\n                    \n                    formData:new FormData()\n                });\n                \n            }\n        })\n    }\n\n\nconst preLoadCategories = ()=>{\n    getAllCategories().then(data=>{\n        if(data.error){\n            setValues({...values,error:data.error})\n        }\n        else{\n            setValues({\n                categories:data,formData:new FormData()\n            })\n        }\n    })\n}\n\nconst match = useMatch(\n    \"/admin/product/update/:productId\"\n  );\n\n\n    useEffect(() => {\n        preLoad(match.params.productId)\n    }, );\n\n    const handleChange =name=> event =>{\n        const value = name ===\"photo\" ? event.target.files[0] : event.target.value;\n        formData.set(name,value);\n        setValues({...values,[name]:value})\n\n    }\n    const onSubmit = event =>{\n        event.preventDefault();\n        setValues({...values,error:\"\",loading:true})\n        updateProduct(match.params.productId,user._id,token,formData)\n        .then(data =>{\n            if(data.error){\n                setValues({...values,error:data.error})\n            }else{\n                setValues({...values,name:\"\",price:\"\",stock:\"\",description:\"\",photo:\"\",loading:false,updatedProduct:data.name})\n            }\n        })\n\n}\n\n    const successMessage =() =>(\n        <div className=\" alert alert-success mt-3\" style={{display : updatedProduct ? \"\" : \"none\"}}>\n            <h4>{updatedProduct} updated Successfully</h4>\n        </div>\n    )\n\n    const errorMessage =() =>(\n        <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n            <h4>Not able to update {updatedProduct}</h4>\n        </div>\n    )\n\n//     const loadingMessage =()=>{\n//         return(\n//         loading && (\n//         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//         Loading......\n//         </div>)\n//     )}\n\n//     const performRedirect =()=>{\n//         if(getaRedirect){\n//             if(user && user.role===1){\n//             return <Navigate to=\"/admin/dashboard\" />\n//             }else{\n//             return <Navigate to=\"/user/dashboard\" />\n//             }\n//         }\n        \n//     }\n\n//     const updateProductForm = () => (\n//         <form class=\"row g-3 p-2\" >\n        \n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Name of Product</label>\n//             <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Description of Product</label>\n//             <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Price</label>\n//             <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>Select Category</label>\n//             <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//             >\n//             <option>Select</option>\n//                 {categories && categories.map((category,index)=>{\n//                 return(\n//                     <option key={index} value={category._id}>{category.name}</option>\n//                 )\n//             })}\n            \n//             </select>\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>stock</label>\n//             <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Quantity\"\n//             value={stock}\n//             />\n//         </div>\n        \n//         <div className=\"form-group col-md-12\">\n//         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n//             <input\n//                 onChange={handleChange(\"photo\")}\n//                 className=\"form-control\"\n//                 id=\"formFile\"\n//                 type=\"file\"\n//                 name=\"photo\"\n//                 accept=\"image\"\n//                 placeholder=\"choose a file\"\n//             />\n            \n//         </div>\n        \n//         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n//             Update Product\n//         </button>\n//         </form>\n//     );\n\nreturn (\n    <Base title='Add a Product Here! ' description='Welcome to Product Creation Section' className='container'>\n        <Link to=\"/admin/dashboard\" className='btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2'>Admin Home</Link>\n        <h2  className=\"text-center mb-2 py-4 text-white \">Update a Product</h2>\n    <div className=\"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\">\n        <div className='col-md-8 p-1 mt-2 offset-md-2'>\n            {loadingMessage()}\n            {performRedirect()}\n            {successMessage()}\n            {errorMessage()}\n            {updateProductForm()}\n        </div>\n    </div>\n    </Base>\n)\n }\n\n\n export default UpdateProduct;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import Base from \"../core/Base\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   getAllCategories,\n//   getProduct,\n//   updateProduct\n// } from \"./helper/adminapicall\";\n// import { isAuthenticated } from \"../auth/helper/index\";\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct = () => {\n//   const { user, token } = isAuthenticated();\n\n//   const [values, setValues] = useState({\n//     name: \"\",\n//     description: \"\",\n//     price: \"\",\n//     stock: \"\",\n//     photo: \"\",\n//     categories: [],\n//     category: \"\",\n//     loading: false,\n//     error: \"\",\n//     createdProduct: \"\",\n//     getaRedirect: false,\n//     formData: \"\"\n//   });\n\n//   const {\n//     name,\n//     description,\n//     price,\n//     stock,\n//     categories,\n//     category,\n//     loading,\n//     error,\n//     createdProduct,\n//     getaRedirect,\n//     formData\n//   } = values;\n\n//   const preload = productId => {\n//     getProduct(productId).then(data => {\n//       //console.log(data);\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         preloadCategories();\n//         setValues({\n//           ...values,\n//           name: data.name,\n//           description: data.description,\n//           price: data.price,\n//           category: data.category._id,\n//           stock: data.stock,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n\n//   const preloadCategories = () => {\n//     getAllCategories().then(data => {\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         setValues({\n//           categories: data,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n//   const match = useMatch(\n//          \"/admin/product/update/:productId\"\n//        );\n\n//   useEffect(() => {\n//     preload(match.params.productId);\n//   }, []);\n\n//   //TODO: work on it\n//   const onSubmit = event => {\n//     event.preventDefault();\n//     setValues({ ...values, error: \"\", loading: true });\n\n//     updateProduct(match.params.productId, user._id, token, formData).then(\n//       data => {\n//         if (data.error) {\n//           setValues({ ...values, error: data.error });\n//         } else {\n//           setValues({\n//             ...values,\n//             name: \"\",\n//             description: \"\",\n//             price: \"\",\n//             photo: \"\",\n//             stock: \"\",\n//             loading: false,\n//             createdProduct: data.name\n//           });\n//         }\n//       }\n//     );\n//   };\n\n//   const handleChange = name => event => {\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//     formData.set(name, value);\n//     setValues({ ...values, [name]: value });\n//   };\n\n//   const successMessage = () => (\n//     <div\n//       className=\"alert alert-success mt-3\"\n//       style={{ display: createdProduct ? \"\" : \"none\" }}\n//     >\n//       <h4>{createdProduct} updated successfully</h4>\n//     </div>\n//   );\n//   const errorMessage =() =>(\n//             <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//                 <h4>Not able to update {createdProduct}</h4>\n//            </div>\n//   )\n//   const createProductForm = () => (\n//     <form>\n//       <span>Post photo</span>\n//       <div className=\"form-group\">\n//         <label className=\"btn btn-block btn-success\">\n//           <input\n//             onChange={handleChange(\"photo\")}\n//             type=\"file\"\n//             name=\"photo\"\n//             accept=\"image\"\n//             placeholder=\"choose a file\"\n//           />\n//         </label>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"name\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Name\"\n//           value={name}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <textarea\n//           onChange={handleChange(\"description\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Description\"\n//           value={description}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"price\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Price\"\n//           value={price}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <select\n//           onChange={handleChange(\"category\")}\n//           className=\"form-control\"\n//           placeholder=\"Category\"\n//         >\n//           <option>Select</option>\n//           {categories &&\n//             categories.map((cate, index) => (\n//               <option key={index} value={cate._id}>\n//                 {cate.name}\n//               </option>\n//             ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"stock\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Stock\"\n//           value={stock}\n//         />\n//       </div>\n\n//       <button\n//         type=\"submit\"\n//         onClick={onSubmit}\n//         className=\"btn btn-outline-success mb-3\"\n//       >\n//         Update Product\n//       </button>\n//     </form>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Add a product here!\"\n//       description=\"Welcome to product creation section\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n//         Admin Home\n//       </Link>\n//       <div className=\"row bg-dark text-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//             {errorMessage()}\n//           {successMessage()}\n//           {createProductForm()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateProduct;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}