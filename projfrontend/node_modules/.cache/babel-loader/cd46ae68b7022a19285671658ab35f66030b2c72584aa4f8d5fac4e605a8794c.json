{"ast":null,"code":"import { API } from \"../../backend\";\nexport const getMeToken = (userId, token) => {\n  return fetch(`${API}/payment/gettoken/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (userId, token, paymentInfo) => {\n  return fetch(`${API}/payment/braintree/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentInfo)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","getMeToken","userId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","processPayment","paymentInfo","body","JSON","stringify"],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/core/helper/paymentBHelper.js"],"sourcesContent":["import { API } from \"../../backend\";\n\n\nexport const getMeToken =(userId,token) =>{\n    return fetch(`${API}/payment/gettoken/${userId}`,{\n        method:\"GET\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization:`Bearer ${token}`\n        },\n    }).then(response =>{\n        return response.json();\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const processPayment =(userId,token,paymentInfo)=>{\n    return fetch(`${API}/payment/braintree/${userId}`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization:`Bearer ${token}`\n        },\n        body:JSON.stringify(paymentInfo)\n    }).then(response =>{\n        return response.json();\n    })\n    .catch(err=>console.log(err))\n\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,eAAe;AAGnC,OAAO,MAAMC,UAAU,GAAEA,CAACC,MAAM,EAACC,KAAK,KAAI;EACtC,OAAOC,KAAK,CAAE,GAAEJ,GAAI,qBAAoBE,MAAO,EAAC,EAAC;IAC7CG,MAAM,EAAC,KAAK;IACZC,OAAO,EAAC;MACJC,MAAM,EAAC,kBAAkB;MACzB,cAAc,EAAC,kBAAkB;MACjCC,aAAa,EAAE,UAASL,KAAM;IAClC;EACJ,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAG;IACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMG,cAAc,GAAEA,CAACd,MAAM,EAACC,KAAK,EAACc,WAAW,KAAG;EACrD,OAAOb,KAAK,CAAE,GAAEJ,GAAI,sBAAqBE,MAAO,EAAC,EAAC;IAC9CG,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJC,MAAM,EAAC,kBAAkB;MACzB,cAAc,EAAC,kBAAkB;MACjCC,aAAa,EAAE,UAASL,KAAM;IAClC,CAAC;IACDe,IAAI,EAACC,IAAI,CAACC,SAAS,CAACH,WAAW;EACnC,CAAC,CAAC,CAACR,IAAI,CAACC,QAAQ,IAAG;IACf,OAAOA,QAAQ,CAACC,IAAI,EAAE;EAC1B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAEC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAEjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}