{"ast":null,"code":"// import { API } from \"../../backend\";\n\n// export const getmeToken =(userId,token) =>{\n//     return fetch(`${API}/payment/gettoken/${userId}`,{\n//         method:\"GET\",\n//         headers:{\n//             Accept:\"application/json\",\n//             \"Content-Type\":\"application/json\",\n//             Authorization:`Bearer ${token}`\n//         },\n//     }).then(response =>{\n//         return response.json();\n//     })\n//     .catch(err=>console.log(err))\n// }\n\n// export const processPayment =(userId,token,paymentInfo)=>{\n//     return fetch(`${API}/payment/braintree/${userId}`,{\n//         method:\"POST\",\n//         headers:{\n//             Accept:\"application/json\",\n//             \"Content-Type\":\"application/json\",\n//             Authorization:`Bearer ${token}`\n//         },\n//         body:JSON.stringify(paymentInfo)\n//     }).then(response =>{\n//         return response.json();\n//     })\n//     .catch(err=>console.log(err))\n\n// }\n\nimport { API } from \"../../backend\";\nexport const getmeToken = (userId, token) => {\n  return fetch(`${API}payment/gettoken/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (userId, token, paymentInfo) => {\n  return fetch(`${API}/payment/braintree/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentInfo)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","getmeToken","userId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","processPayment","paymentInfo","body","JSON","stringify"],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/core/helper/paymentBHelper.js"],"sourcesContent":["// import { API } from \"../../backend\";\n\n\n// export const getmeToken =(userId,token) =>{\n//     return fetch(`${API}/payment/gettoken/${userId}`,{\n//         method:\"GET\",\n//         headers:{\n//             Accept:\"application/json\",\n//             \"Content-Type\":\"application/json\",\n//             Authorization:`Bearer ${token}`\n//         },\n//     }).then(response =>{\n//         return response.json();\n//     })\n//     .catch(err=>console.log(err))\n// }\n\n// export const processPayment =(userId,token,paymentInfo)=>{\n//     return fetch(`${API}/payment/braintree/${userId}`,{\n//         method:\"POST\",\n//         headers:{\n//             Accept:\"application/json\",\n//             \"Content-Type\":\"application/json\",\n//             Authorization:`Bearer ${token}`\n//         },\n//         body:JSON.stringify(paymentInfo)\n//     }).then(response =>{\n//         return response.json();\n//     })\n//     .catch(err=>console.log(err))\n\n// }\n\nimport { API } from \"../../backend\";\n\nexport const getmeToken = (userId, token) => {\n  return fetch(`${API}payment/gettoken/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentInfo) => {\n  return fetch(`${API}/payment/braintree/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentInfo)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,GAAG,QAAQ,eAAe;AAEnC,OAAO,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,GAAI,oBAAmBE,MAAO,EAAC,EAAE;IAC/CG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASL,KAAM;IACjC;EACF,CAAC,CAAC,CACCM,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGA,CAACd,MAAM,EAAEC,KAAK,EAAEc,WAAW,KAAK;EAC5D,OAAOb,KAAK,CAAE,GAAEJ,GAAI,sBAAqBE,MAAO,EAAC,EAAE;IACjDG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASL,KAAM;IACjC,CAAC;IACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,WAAW;EAClC,CAAC,CAAC,CACCR,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}