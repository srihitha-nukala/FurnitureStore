{"ast":null,"code":"// import React, {useState,useEffect} from 'react'\n// import Base from \"../core/Base\";\n// import { isAuthenticated } from '../auth/helper';\n// import { Link,Navigate } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import {updateCategory,getCategory} from './helper/adminapicall'\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateCategory = () => {\n\n//     const [category,setCategory] = useState(\"\");\n//     const [error,setError] = useState(false);\n//     const [success,setSuccess] = useState(false);\n\n//     const {user,token} = isAuthenticated();\n\n//     const preLoad = categoryId =>{\n//         getCategory(categoryId).then(data =>{\n\n//             console.log(data);\n//             if(data.error){\n//                 console.log(error.response)\n\n//             }else{\n//                 setCategory(data.name);\n//                 console.log(data.name)\n\n//             }\n//         })\n//     }\n\n//     //  const preLoadCategories = ()=>{\n//     //     getAllCategories().then(data=>{\n//     //         if(data.error){\n//     //             console.log(data.error)\n//     //         }\n//     //         else{\n//     //             setName({name:data.name});\n//     //         }\n//     //     })\n//     // }\n\n//     const match = useMatch(\n//         \"/admin/category/update/:categoryId\"\n//       );\n\n//         useEffect(() => {\n//             preLoad(match.params.categoryId)\n//         },[]);\n\n//     const handleChange =event=>{\n//          setError(\"\")\n//          setCategory(event.target.value)\n\n//     }\n\n//     const onSubmit =event=>{\n//         event.preventDefault();\n//         setError(\"\");\n//         setSuccess(false);\n\n//         //backend request fired\n//         updateCategory(match.params.categoryId,user._id,token,\n//             {category}\n//             ).then(data =>{\n//             if(data.error){\n//                 console.log(data.error)\n//                 setError(true)\n//             }else{\n//                 setError(\"\");\n//                 setSuccess(true);\n//                 setCategory(\"\")\n//             }\n//         })\n//     }\n\n//     const successMessage = () =>{\n//         // <div className=\" alert alert-success mt-3\" style={{display : updatedCategory ? \"\" : \"none\"}}>\n//         //     <h4>{updatedCategory} updated Successfully</h4>\n//         // </div>\n//         if(success){\n//             return <button className='m-2 p-2 shadow-lg rounded text-center btn-success text-success'>Category updated successfully {category} </button>\n//         }\n//     }\n\n//     const errorMessage = () =>{\n//         // <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//         //     <h4>Not able to update {updatedCategory}</h4>\n//         // </div>\n//         if(error){\n//             return <button className='m-2 p-2 shadow-lg rounded text-center btn-danger text-white'>Failed to Update Category {category} </button>\n//         }\n//     }\n//     // const loadingMessage =()=>{\n//     //     return(\n//     //     loading && (\n//     //     <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//     //      Loading......\n//     //      </div>)\n//     // )}\n\n//     //  const performRedirect =()=>{\n//     //     if(getaRedirect){\n//     //         if(user && user.role===1){\n//     //         return <Navigate to=\"/admin/dashboard\" />\n//     //         }\n//     //     }\n\n//     // }\n\n//     const myCategoryForm = () =>{\n//         return(\n//             <Form>\n//       <Form.Group className=\"mb-4\" >\n//         <Form.Label >Enter the Update category</Form.Label>\n//         <Form.Control type='text' className='p-3 my-2' onChange={handleChange}  placeholder=\"For example: Sofas\" value={category} autoFocus required />\n//       </Form.Group>\n//       <Button className='shadow-lg   rounded'  variant=\"primary\" onClick={onSubmit} type=\"submit\">\n//         Update Category\n//       </Button>\n//     </Form>\n//         )\n//     }\n\n//   return (\n//     <Base title=\"Update a Category\" description='Update a new category for new Furiture' className='container mt-mb-3 '>\n//         <Link className=\"btn btn-white bg-white  shadow-lg rounded mt-5 \" to={`/admin/dashboard`}>\n//         <span className=\"mb-2 text-dark\">Admin Home</span>\n//       </Link>\n//         <h2  className=\"text-center mb-0 py-4 text-white \">Update a Category</h2>\n//         <div className='row pl-0 p-3 m-4 ml-5 col-11 justify-content-center align-items-center  bg-white rounded'>\n//             <div className=\"div ml-0 col-md-8 offset-md-2\">\n//                 {successMessage()}\n//                 {errorMessage()}\n//                 {/* {performRedirect()}\n//                 {loadingMessage()} */}\n//                 {myCategoryForm()}\n//                 {/* {goBack()} */}\n//             </div>\n//         </div>\n//     </Base>\n//   )\n// }\n\n// export default UpdateCategory;\n\n// import React, { useState, useEffect } from 'react';\n// import Base from '../core/Base';\n// import { isAuthenticated } from '../auth/helper';\n// import { getCategory, updateCategory } from './helper/adminapicall';\n// import { Link } from 'react-router-dom';\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateCategory = () => {\n//   const [name, setName] = useState('');\n//   const [error, setError] = useState(false);\n//   const [success, setSuccess] = useState(false);\n\n//   const { user, token } = isAuthenticated();\n\n//   const preload = (categoryId) => {\n//     getCategory(categoryId).then((data) => {\n//       if (data.error) {\n//         setError(data.error);\n//       } else {\n//         setName(data.name);\n//       }\n//     });\n//   };\n\n//   const match = useMatch(\n//     \"/admin/category/update/:categoryId\"\n//   );\n\n//   useEffect(() => {\n//     preload(match?.params?.categoryId);\n//   }, []);\n\n//   const handleChange = (event) => {\n//     setError(false);\n//     setName(event.target.value);\n//   };\n\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     setError(false);\n//     setSuccess(false);\n\n//     // backend request fired\n//     updateCategory(match.params.categoryId, user._id, token, { name })\n//       .then((data) => {\n//         if (data.error) {\n//           setError(true);\n//         } else {\n//           setError(false);\n//           setSuccess(true);\n//           setName('');\n//         }\n//       })\n//       .catch(console.log('Error in updating category'));\n//   };\n\n//   const successMessage = () => {\n//     if (success) {\n//       return <h4 className=\"text-success\">Category updated successfully</h4>;\n//     }\n//   };\n\n//   const warningMessage = () => {\n//     if (error) {\n//       return <h4 className=\"text-warning\">Failed to update category</h4>;\n//     }\n//   };\n\n//   const categoryForm = () => (\n//     <form>\n//       <div className=\"form-group\">\n//         <p className=\"lead\">Update the category</p>\n//         <input\n//           type=\"text\"\n//           className=\"form-control my-3\"\n//           onChange={handleChange}\n//           value={name}\n//           autoFocus\n//           required\n//           placeholder=\"For Ex. Summer\"\n//         />\n//         <button onClick={onSubmit} className=\"btn btn-outline-info\">\n//           Update Category\n//         </button>\n//       </div>\n//     </form>\n//   );\n\n//   const goBack = () => (\n//     <div className=\"mt-5\">\n//       <Link className=\"btn btn-sm btn-info mb-3\" to=\"/admin/dashboard\">\n//         Admin Home\n//       </Link>\n//     </div>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Update a category here\"\n//       description=\"Update an existing category for new tshirts\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <div className=\"row bg-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//           {successMessage()}\n//           {warningMessage()}\n//           {categoryForm()}\n//           {goBack()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateCategory;","map":{"version":3,"names":[],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateCategory.js"],"sourcesContent":["// import React, {useState,useEffect} from 'react'\n// import Base from \"../core/Base\";\n// import { isAuthenticated } from '../auth/helper';\n// import { Link,Navigate } from 'react-router-dom';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import {updateCategory,getCategory} from './helper/adminapicall'\n// import { useMatch } from 'react-router-dom';\n\n\n\n// const UpdateCategory = () => {\n\n//     const [category,setCategory] = useState(\"\");\n//     const [error,setError] = useState(false);\n//     const [success,setSuccess] = useState(false);\n\n//     const {user,token} = isAuthenticated();\n\n\n//     const preLoad = categoryId =>{\n//         getCategory(categoryId).then(data =>{\n            \n//             console.log(data);\n//             if(data.error){\n//                 console.log(error.response)\n                \n//             }else{\n//                 setCategory(data.name);\n//                 console.log(data.name)\n                \n//             }\n//         })\n//     }\n\n//     //  const preLoadCategories = ()=>{\n//     //     getAllCategories().then(data=>{\n//     //         if(data.error){\n//     //             console.log(data.error)\n//     //         }\n//     //         else{\n//     //             setName({name:data.name});\n//     //         }\n//     //     })\n//     // }\n    \n//     const match = useMatch(\n//         \"/admin/category/update/:categoryId\"\n//       );\n    \n    \n//         useEffect(() => {\n//             preLoad(match.params.categoryId)\n//         },[]);\n    \n\n//     const handleChange =event=>{\n//          setError(\"\")\n//          setCategory(event.target.value)\n        \n//     }\n\n//     const onSubmit =event=>{\n//         event.preventDefault();\n//         setError(\"\");\n//         setSuccess(false);\n\n//         //backend request fired\n//         updateCategory(match.params.categoryId,user._id,token,\n//             {category}\n//             ).then(data =>{\n//             if(data.error){\n//                 console.log(data.error)\n//                 setError(true)\n//             }else{\n//                 setError(\"\");\n//                 setSuccess(true);\n//                 setCategory(\"\")\n//             }\n//         })\n//     }\n\n//     const successMessage = () =>{\n//         // <div className=\" alert alert-success mt-3\" style={{display : updatedCategory ? \"\" : \"none\"}}>\n//         //     <h4>{updatedCategory} updated Successfully</h4>\n//         // </div>\n//         if(success){\n//             return <button className='m-2 p-2 shadow-lg rounded text-center btn-success text-success'>Category updated successfully {category} </button>\n//         }\n//     }\n\n//     const errorMessage = () =>{\n//         // <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//         //     <h4>Not able to update {updatedCategory}</h4>\n//         // </div>\n//         if(error){\n//             return <button className='m-2 p-2 shadow-lg rounded text-center btn-danger text-white'>Failed to Update Category {category} </button>\n//         }\n//     }\n//     // const loadingMessage =()=>{\n//     //     return(\n//     //     loading && (\n//     //     <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//     //      Loading......\n//     //      </div>)\n//     // )}\n\n//     //  const performRedirect =()=>{\n//     //     if(getaRedirect){\n//     //         if(user && user.role===1){\n//     //         return <Navigate to=\"/admin/dashboard\" />\n//     //         }\n//     //     }\n        \n//     // }\n\n\n//     const myCategoryForm = () =>{\n//         return(\n//             <Form>\n//       <Form.Group className=\"mb-4\" >\n//         <Form.Label >Enter the Update category</Form.Label>\n//         <Form.Control type='text' className='p-3 my-2' onChange={handleChange}  placeholder=\"For example: Sofas\" value={category} autoFocus required />\n//       </Form.Group>\n//       <Button className='shadow-lg   rounded'  variant=\"primary\" onClick={onSubmit} type=\"submit\">\n//         Update Category\n//       </Button>\n//     </Form>\n//         )\n//     }\n\n\n\n//   return (\n//     <Base title=\"Update a Category\" description='Update a new category for new Furiture' className='container mt-mb-3 '>\n//         <Link className=\"btn btn-white bg-white  shadow-lg rounded mt-5 \" to={`/admin/dashboard`}>\n//         <span className=\"mb-2 text-dark\">Admin Home</span>\n//       </Link>\n//         <h2  className=\"text-center mb-0 py-4 text-white \">Update a Category</h2>\n//         <div className='row pl-0 p-3 m-4 ml-5 col-11 justify-content-center align-items-center  bg-white rounded'>\n//             <div className=\"div ml-0 col-md-8 offset-md-2\">\n//                 {successMessage()}\n//                 {errorMessage()}\n//                 {/* {performRedirect()}\n//                 {loadingMessage()} */}\n//                 {myCategoryForm()}\n//                 {/* {goBack()} */}\n//             </div>\n//         </div>\n//     </Base>\n//   )\n// }\n\n// export default UpdateCategory;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import Base from '../core/Base';\n// import { isAuthenticated } from '../auth/helper';\n// import { getCategory, updateCategory } from './helper/adminapicall';\n// import { Link } from 'react-router-dom';\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateCategory = () => {\n//   const [name, setName] = useState('');\n//   const [error, setError] = useState(false);\n//   const [success, setSuccess] = useState(false);\n\n//   const { user, token } = isAuthenticated();\n\n//   const preload = (categoryId) => {\n//     getCategory(categoryId).then((data) => {\n//       if (data.error) {\n//         setError(data.error);\n//       } else {\n//         setName(data.name);\n//       }\n//     });\n//   };\n\n//   const match = useMatch(\n//     \"/admin/category/update/:categoryId\"\n//   );\n\n//   useEffect(() => {\n//     preload(match?.params?.categoryId);\n//   }, []);\n\n//   const handleChange = (event) => {\n//     setError(false);\n//     setName(event.target.value);\n//   };\n\n//   const onSubmit = (event) => {\n//     event.preventDefault();\n//     setError(false);\n//     setSuccess(false);\n\n//     // backend request fired\n//     updateCategory(match.params.categoryId, user._id, token, { name })\n//       .then((data) => {\n//         if (data.error) {\n//           setError(true);\n//         } else {\n//           setError(false);\n//           setSuccess(true);\n//           setName('');\n//         }\n//       })\n//       .catch(console.log('Error in updating category'));\n//   };\n\n//   const successMessage = () => {\n//     if (success) {\n//       return <h4 className=\"text-success\">Category updated successfully</h4>;\n//     }\n//   };\n\n//   const warningMessage = () => {\n//     if (error) {\n//       return <h4 className=\"text-warning\">Failed to update category</h4>;\n//     }\n//   };\n\n//   const categoryForm = () => (\n//     <form>\n//       <div className=\"form-group\">\n//         <p className=\"lead\">Update the category</p>\n//         <input\n//           type=\"text\"\n//           className=\"form-control my-3\"\n//           onChange={handleChange}\n//           value={name}\n//           autoFocus\n//           required\n//           placeholder=\"For Ex. Summer\"\n//         />\n//         <button onClick={onSubmit} className=\"btn btn-outline-info\">\n//           Update Category\n//         </button>\n//       </div>\n//     </form>\n//   );\n\n//   const goBack = () => (\n//     <div className=\"mt-5\">\n//       <Link className=\"btn btn-sm btn-info mb-3\" to=\"/admin/dashboard\">\n//         Admin Home\n//       </Link>\n//     </div>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Update a category here\"\n//       description=\"Update an existing category for new tshirts\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <div className=\"row bg-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//           {successMessage()}\n//           {warningMessage()}\n//           {categoryForm()}\n//           {goBack()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateCategory;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}