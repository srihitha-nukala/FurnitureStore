{"ast":null,"code":"// import React,{useState,useEffect} from 'react'\n\n// import Base from '../core/Base';\n// import { Link,Navigate } from 'react-router-dom';\n// import { isAuthenticated } from '../auth/helper/index';\n// import {updateProduct,getProduct, getAllCategories} from '../admin/helper/adminapicall';\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct=()=> {\n\n//     const {user,token} = isAuthenticated();\n\n//     const [values,setValues] = useState({\n//         name:\"\",\n//         description:\"\",\n//         price:\"\",\n//         stock:\"\",\n//         photo:\"\",\n//         categories:[],\n//         category:\"\",\n//         loading:false,\n//         error:\"\",\n//         updatedProduct:\"\",\n//         getaRedirect:false,\n//         formData:\"\"\n\n//     })\n\n//     const {name,description,price,stock,categories,category,loading,error,updatedProduct,getaRedirect,formData} = values;\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//     const preLoad = productId =>{\n//         getProduct(productId).then(data =>{\n\n//             console.log(data);\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 preLoadCategories();\n//                 setValues({\n//                     ...values,\n//                     name:data.name,\n//                     description:data.description,\n//                     price:data.price,\n//                     category:data.category._id,\n//                     stock:data.stock,\n\n//                     formData:new FormData()\n//                 });\n\n//             }\n//         })\n//     }\n\n// const preLoadCategories = ()=>{\n//     getAllCategories().then(data=>{\n//         if(data.error){\n//             setValues({...values,error:data.error})\n//         }\n//         else{\n//             setValues({\n//                 categories:data,formData:new FormData()\n//             })\n//         }\n//     })\n// }\n\n// const match = useMatch(\n//     \"/admin/product/update/:productId\"\n//   );\n\n//     useEffect(() => {\n//         preLoad(match.params.productId)\n//     }, );\n\n//     const handleChange =name=> event =>{\n//         const value = name ===\"photo\" ? event.target.files[0] : event.target.value;\n//         formData.set(name,value);\n//         setValues({...values,[name]:value})\n\n//     }\n//     const onSubmit = event =>{\n//         event.preventDefault();\n//         setValues({...values,error:\"\",loading:true})\n//         updateProduct(match.params.productId,user._id,token,formData)\n//         .then(data =>{\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 setValues({...values,name:\"\",price:\"\",stock:\"\",description:\"\",photo:\"\",loading:false,updatedProduct:data.name})\n//             }\n//         })\n\n// }\n\n//     const successMessage =() =>(\n//         <div className=\" alert alert-success mt-3\" style={{display : updatedProduct ? \"\" : \"none\"}}>\n//             <h4>{updatedProduct} updated Successfully</h4>\n//         </div>\n//     )\n\n//     const errorMessage =() =>(\n//         <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//             <h4>Not able to update {updatedProduct}</h4>\n//         </div>\n//     )\n\n//     const loadingMessage =()=>{\n//         return(\n//         loading && (\n//         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//         Loading......\n//         </div>)\n//     )}\n\n//     const performRedirect =()=>{\n//         if(getaRedirect){\n//             if(user && user.role===1){\n//             return <Navigate to=\"/admin/dashboard\" />\n//             }else{\n//             return <Navigate to=\"/user/dashboard\" />\n//             }\n//         }\n\n//     }\n\n//     const updateProductForm = () => (\n//         <form class=\"row g-3 p-2\" >\n\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Name of Product</label>\n//             <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Description of Product</label>\n//             <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Price</label>\n//             <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>Select Category</label>\n//             <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//             >\n//             <option>Select</option>\n//                 {categories && categories.map((category,index)=>{\n//                 return(\n//                     <option key={index} value={category._id}>{category.name}</option>\n//                 )\n//             })}\n\n//             </select>\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>stock</label>\n//             <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Quantity\"\n//             value={stock}\n//             />\n//         </div>\n\n//         <div className=\"form-group col-md-12\">\n//         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n//             <input\n//                 onChange={handleChange(\"photo\")}\n//                 className=\"form-control\"\n//                 id=\"formFile\"\n//                 type=\"file\"\n//                 name=\"photo\"\n//                 accept=\"image\"\n//                 placeholder=\"choose a file\"\n//             />\n\n//         </div>\n\n//         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n//             Update Product\n//         </button>\n//         </form>\n//     );\n\n// return (\n//     <Base title='Add a Product Here! ' description='Welcome to Product Creation Section' className='container'>\n//         <Link to=\"/admin/dashboard\" className='btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2'>Admin Home</Link>\n//         <h2  className=\"text-center mb-2 py-4 text-white \">Update a Product</h2>\n//     <div className=\"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\">\n//         <div className='col-md-8 p-1 mt-2 offset-md-2'>\n//             {loadingMessage()}\n//             {performRedirect()}\n//             {successMessage()}\n//             {errorMessage()}\n//             {updateProductForm()}\n//         </div>\n//     </div>\n//     </Base>\n// )\n// }\n\n// export default UpdateProduct;\n\n// import React, { useState, useEffect } from \"react\";\n// import Base from \"../core/Base\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   getAllCategories,\n//   getProduct,\n//   updateProduct\n// } from \"./helper/adminapicall\";\n// import { isAuthenticated } from \"../auth/helper/index\";\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct = () => {\n//   const { user, token } = isAuthenticated();\n\n//   const [values, setValues] = useState({\n//     name: \"\",\n//     description: \"\",\n//     price: \"\",\n//     stock: \"\",\n//     photo: \"\",\n//     categories: [],\n//     category: \"\",\n//     loading: false,\n//     error: \"\",\n//     createdProduct: \"\",\n//     getaRedirect: false,\n//     formData: \"\"\n//   });\n\n//   const {\n//     name,\n//     description,\n//     price,\n//     stock,\n//     categories,\n//     category,\n//     loading,\n//     error,\n//     createdProduct,\n//     getaRedirect,\n//     formData\n//   } = values;\n\n//   const preload = productId => {\n//     getProduct(productId).then(data => {\n//       //console.log(data);\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         preloadCategories();\n//         setValues({\n//           ...values,\n//           name: data.name,\n//           description: data.description,\n//           price: data.price,\n//           category: data.category._id,\n//           stock: data.stock,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n\n//   const preloadCategories = () => {\n//     getAllCategories().then(data => {\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         setValues({\n//           categories: data,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n//   const match = useMatch(\n//          \"/admin/product/update/:productId\"\n//        );\n\n//   useEffect(() => {\n//     preload(match.params.productId);\n//   }, []);\n\n//   //TODO: work on it\n//   const onSubmit = event => {\n//     event.preventDefault();\n//     setValues({ ...values, error: \"\", loading: true });\n\n//     updateProduct(match.params.productId, user._id, token, formData).then(\n//       data => {\n//         if (data.error) {\n//           setValues({ ...values, error: data.error });\n//         } else {\n//           setValues({\n//             ...values,\n//             name: \"\",\n//             description: \"\",\n//             price: \"\",\n//             photo: \"\",\n//             stock: \"\",\n//             loading: false,\n//             createdProduct: data.name\n//           });\n//         }\n//       }\n//     );\n//   };\n\n//   const handleChange = name => event => {\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//     formData.set(name, value);\n//     setValues({ ...values, [name]: value });\n//   };\n\n//   const successMessage = () => (\n//     <div\n//       className=\"alert alert-success mt-3\"\n//       style={{ display: createdProduct ? \"\" : \"none\" }}\n//     >\n//       <h4>{createdProduct} updated successfully</h4>\n//     </div>\n//   );\n//   const errorMessage =() =>(\n//             <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//                 <h4>Not able to update {createdProduct}</h4>\n//            </div>\n//   )\n//   const createProductForm = () => (\n//     <form>\n//       <span>Post photo</span>\n//       <div className=\"form-group\">\n//         <label className=\"btn btn-block btn-success\">\n//           <input\n//             onChange={handleChange(\"photo\")}\n//             type=\"file\"\n//             name=\"photo\"\n//             accept=\"image\"\n//             placeholder=\"choose a file\"\n//           />\n//         </label>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"name\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Name\"\n//           value={name}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <textarea\n//           onChange={handleChange(\"description\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Description\"\n//           value={description}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"price\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Price\"\n//           value={price}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <select\n//           onChange={handleChange(\"category\")}\n//           className=\"form-control\"\n//           placeholder=\"Category\"\n//         >\n//           <option>Select</option>\n//           {categories &&\n//             categories.map((cate, index) => (\n//               <option key={index} value={cate._id}>\n//                 {cate.name}\n//               </option>\n//             ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"stock\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Stock\"\n//           value={stock}\n//         />\n//       </div>\n\n//       <button\n//         type=\"submit\"\n//         onClick={onSubmit}\n//         className=\"btn btn-outline-success mb-3\"\n//       >\n//         Update Product\n//       </button>\n//     </form>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Add a product here!\"\n//       description=\"Welcome to product creation section\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n//         Admin Home\n//       </Link>\n//       <div className=\"row bg-dark text-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//             {errorMessage()}\n//           {successMessage()}\n//           {createProductForm()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateProduct;","map":{"version":3,"names":[],"sources":["/Users/srihitha/Desktop/mern/projfrontend/src/admin/UpdateProduct.js"],"sourcesContent":["// import React,{useState,useEffect} from 'react'\n\n\n// import Base from '../core/Base';\n// import { Link,Navigate } from 'react-router-dom';\n// import { isAuthenticated } from '../auth/helper/index';\n// import {updateProduct,getProduct, getAllCategories} from '../admin/helper/adminapicall';\n// import { useMatch } from 'react-router-dom';\n\n\n\n\n\n\n// const UpdateProduct=()=> {\n    \n    \n//     const {user,token} = isAuthenticated();\n\n//     const [values,setValues] = useState({\n//         name:\"\",\n//         description:\"\",\n//         price:\"\",\n//         stock:\"\",\n//         photo:\"\",\n//         categories:[],\n//         category:\"\",\n//         loading:false,\n//         error:\"\",\n//         updatedProduct:\"\",\n//         getaRedirect:false,\n//         formData:\"\"\n\n//     })\n\n//     const {name,description,price,stock,categories,category,loading,error,updatedProduct,getaRedirect,formData} = values;\n\n//     // eslint-disable-next-line react-hooks/exhaustive-deps\n//     const preLoad = productId =>{\n//         getProduct(productId).then(data =>{\n            \n//             console.log(data);\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 preLoadCategories();\n//                 setValues({\n//                     ...values,\n//                     name:data.name,\n//                     description:data.description,\n//                     price:data.price,\n//                     category:data.category._id,\n//                     stock:data.stock,\n                    \n//                     formData:new FormData()\n//                 });\n                \n//             }\n//         })\n//     }\n\n\n// const preLoadCategories = ()=>{\n//     getAllCategories().then(data=>{\n//         if(data.error){\n//             setValues({...values,error:data.error})\n//         }\n//         else{\n//             setValues({\n//                 categories:data,formData:new FormData()\n//             })\n//         }\n//     })\n// }\n\n// const match = useMatch(\n//     \"/admin/product/update/:productId\"\n//   );\n\n\n//     useEffect(() => {\n//         preLoad(match.params.productId)\n//     }, );\n\n//     const handleChange =name=> event =>{\n//         const value = name ===\"photo\" ? event.target.files[0] : event.target.value;\n//         formData.set(name,value);\n//         setValues({...values,[name]:value})\n\n//     }\n//     const onSubmit = event =>{\n//         event.preventDefault();\n//         setValues({...values,error:\"\",loading:true})\n//         updateProduct(match.params.productId,user._id,token,formData)\n//         .then(data =>{\n//             if(data.error){\n//                 setValues({...values,error:data.error})\n//             }else{\n//                 setValues({...values,name:\"\",price:\"\",stock:\"\",description:\"\",photo:\"\",loading:false,updatedProduct:data.name})\n//             }\n//         })\n\n// }\n\n//     const successMessage =() =>(\n//         <div className=\" alert alert-success mt-3\" style={{display : updatedProduct ? \"\" : \"none\"}}>\n//             <h4>{updatedProduct} updated Successfully</h4>\n//         </div>\n//     )\n\n//     const errorMessage =() =>(\n//         <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//             <h4>Not able to update {updatedProduct}</h4>\n//         </div>\n//     )\n\n//     const loadingMessage =()=>{\n//         return(\n//         loading && (\n//         <div className=\" issue alert alert-info\" style={{display: loading ? \"\" :\"none\"}}>\n//         Loading......\n//         </div>)\n//     )}\n\n//     const performRedirect =()=>{\n//         if(getaRedirect){\n//             if(user && user.role===1){\n//             return <Navigate to=\"/admin/dashboard\" />\n//             }else{\n//             return <Navigate to=\"/user/dashboard\" />\n//             }\n//         }\n        \n//     }\n\n//     const updateProductForm = () => (\n//         <form class=\"row g-3 p-2\" >\n        \n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Name of Product</label>\n//             <input\n//             onChange={handleChange(\"name\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Name\"\n//             value={name}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Description of Product</label>\n//             <textarea\n//             onChange={handleChange(\"description\")}\n//             name=\"photo\"\n//             className=\"form-control\"\n//             placeholder=\"Description\"\n//             value={description}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-12\">\n//         <label type=\"text\" className='text-dark'>Price</label>\n//             <input\n//             onChange={handleChange(\"price\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Price\"\n//             value={price}\n//             />\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>Select Category</label>\n//             <select\n//             onChange={handleChange(\"category\")}\n//             className=\"form-control\"\n//             placeholder=\"Category\"\n//             >\n//             <option>Select</option>\n//                 {categories && categories.map((category,index)=>{\n//                 return(\n//                     <option key={index} value={category._id}>{category.name}</option>\n//                 )\n//             })}\n            \n//             </select>\n//         </div>\n//         <div className=\"form-group col-md-6\">\n//         <label type=\"text\" className='text-dark'>stock</label>\n//             <input\n//             onChange={handleChange(\"stock\")}\n//             type=\"number\"\n//             className=\"form-control\"\n//             placeholder=\"Quantity\"\n//             value={stock}\n//             />\n//         </div>\n        \n//         <div className=\"form-group col-md-12\">\n//         <label for=\"formFile\" className=\"form-label text-dark\" >Upload Photo</label>\n//             <input\n//                 onChange={handleChange(\"photo\")}\n//                 className=\"form-control\"\n//                 id=\"formFile\"\n//                 type=\"file\"\n//                 name=\"photo\"\n//                 accept=\"image\"\n//                 placeholder=\"choose a file\"\n//             />\n            \n//         </div>\n        \n//         <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success col-md-6 ml-3 shadow-lg  btn-success  rounded mb-3\">\n//             Update Product\n//         </button>\n//         </form>\n//     );\n\n// return (\n//     <Base title='Add a Product Here! ' description='Welcome to Product Creation Section' className='container'>\n//         <Link to=\"/admin/dashboard\" className='btn shadow-lg rounded mt-4  btn-md bg-white text-dark mb-2'>Admin Home</Link>\n//         <h2  className=\"text-center mb-2 py-4 text-white \">Update a Product</h2>\n//     <div className=\"row mx-auto col-10 col-md-8 col-lg-6 bg-white mb-4 shadow-md rounded\">\n//         <div className='col-md-8 p-1 mt-2 offset-md-2'>\n//             {loadingMessage()}\n//             {performRedirect()}\n//             {successMessage()}\n//             {errorMessage()}\n//             {updateProductForm()}\n//         </div>\n//     </div>\n//     </Base>\n// )\n// }\n\n\n// export default UpdateProduct;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import Base from \"../core/Base\";\n// import { Link } from \"react-router-dom\";\n// import {\n//   getAllCategories,\n//   getProduct,\n//   updateProduct\n// } from \"./helper/adminapicall\";\n// import { isAuthenticated } from \"../auth/helper/index\";\n// import { useMatch } from 'react-router-dom';\n\n// const UpdateProduct = () => {\n//   const { user, token } = isAuthenticated();\n\n//   const [values, setValues] = useState({\n//     name: \"\",\n//     description: \"\",\n//     price: \"\",\n//     stock: \"\",\n//     photo: \"\",\n//     categories: [],\n//     category: \"\",\n//     loading: false,\n//     error: \"\",\n//     createdProduct: \"\",\n//     getaRedirect: false,\n//     formData: \"\"\n//   });\n\n//   const {\n//     name,\n//     description,\n//     price,\n//     stock,\n//     categories,\n//     category,\n//     loading,\n//     error,\n//     createdProduct,\n//     getaRedirect,\n//     formData\n//   } = values;\n\n//   const preload = productId => {\n//     getProduct(productId).then(data => {\n//       //console.log(data);\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         preloadCategories();\n//         setValues({\n//           ...values,\n//           name: data.name,\n//           description: data.description,\n//           price: data.price,\n//           category: data.category._id,\n//           stock: data.stock,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n\n//   const preloadCategories = () => {\n//     getAllCategories().then(data => {\n//       if (data.error) {\n//         setValues({ ...values, error: data.error });\n//       } else {\n//         setValues({\n//           categories: data,\n//           formData: new FormData()\n//         });\n//       }\n//     });\n//   };\n//   const match = useMatch(\n//          \"/admin/product/update/:productId\"\n//        );\n\n//   useEffect(() => {\n//     preload(match.params.productId);\n//   }, []);\n\n//   //TODO: work on it\n//   const onSubmit = event => {\n//     event.preventDefault();\n//     setValues({ ...values, error: \"\", loading: true });\n\n//     updateProduct(match.params.productId, user._id, token, formData).then(\n//       data => {\n//         if (data.error) {\n//           setValues({ ...values, error: data.error });\n//         } else {\n//           setValues({\n//             ...values,\n//             name: \"\",\n//             description: \"\",\n//             price: \"\",\n//             photo: \"\",\n//             stock: \"\",\n//             loading: false,\n//             createdProduct: data.name\n//           });\n//         }\n//       }\n//     );\n//   };\n\n//   const handleChange = name => event => {\n//     const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n//     formData.set(name, value);\n//     setValues({ ...values, [name]: value });\n//   };\n\n//   const successMessage = () => (\n//     <div\n//       className=\"alert alert-success mt-3\"\n//       style={{ display: createdProduct ? \"\" : \"none\" }}\n//     >\n//       <h4>{createdProduct} updated successfully</h4>\n//     </div>\n//   );\n//   const errorMessage =() =>(\n//             <div className=\" alert alert-danger mt-3\" style={{display : error ? \"\" : \"none\"}}>\n//                 <h4>Not able to update {createdProduct}</h4>\n//            </div>\n//   )\n//   const createProductForm = () => (\n//     <form>\n//       <span>Post photo</span>\n//       <div className=\"form-group\">\n//         <label className=\"btn btn-block btn-success\">\n//           <input\n//             onChange={handleChange(\"photo\")}\n//             type=\"file\"\n//             name=\"photo\"\n//             accept=\"image\"\n//             placeholder=\"choose a file\"\n//           />\n//         </label>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"name\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Name\"\n//           value={name}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <textarea\n//           onChange={handleChange(\"description\")}\n//           name=\"photo\"\n//           className=\"form-control\"\n//           placeholder=\"Description\"\n//           value={description}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"price\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Price\"\n//           value={price}\n//         />\n//       </div>\n//       <div className=\"form-group\">\n//         <select\n//           onChange={handleChange(\"category\")}\n//           className=\"form-control\"\n//           placeholder=\"Category\"\n//         >\n//           <option>Select</option>\n//           {categories &&\n//             categories.map((cate, index) => (\n//               <option key={index} value={cate._id}>\n//                 {cate.name}\n//               </option>\n//             ))}\n//         </select>\n//       </div>\n//       <div className=\"form-group\">\n//         <input\n//           onChange={handleChange(\"stock\")}\n//           type=\"number\"\n//           className=\"form-control\"\n//           placeholder=\"Stock\"\n//           value={stock}\n//         />\n//       </div>\n\n//       <button\n//         type=\"submit\"\n//         onClick={onSubmit}\n//         className=\"btn btn-outline-success mb-3\"\n//       >\n//         Update Product\n//       </button>\n//     </form>\n//   );\n\n//   return (\n//     <Base\n//       title=\"Add a product here!\"\n//       description=\"Welcome to product creation section\"\n//       className=\"container bg-info p-4\"\n//     >\n//       <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\n//         Admin Home\n//       </Link>\n//       <div className=\"row bg-dark text-white rounded\">\n//         <div className=\"col-md-8 offset-md-2\">\n//             {errorMessage()}\n//           {successMessage()}\n//           {createProductForm()}\n//         </div>\n//       </div>\n//     </Base>\n//   );\n// };\n\n// export default UpdateProduct;\n"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;AACA;;AAOA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}